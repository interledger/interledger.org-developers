---
import FoundationLogo from "../logos/FoundationLogo.astro";
import { getLangFromUrl, useTranslations, useTranslatedPath } from "../../i18n/utils";
import LanguagePicker from "../LanguagePicker.astro"

const lang = getLangFromUrl(Astro.url); 
const t = useTranslations(lang); 
const translatePath = useTranslatedPath(lang, lang);
---
<header class="site-header" role="banner">
  <nav class="site-nav" role="navigation" aria-labelledby="block-interledger-mainnavigation-menu" id="block-interledger-mainnavigation">
    <h2 class="visually-hidden" id="block-interledger-mainnavigation-menu">Main navigation</h2>
    <a href={translatePath("/")} class="site-logo" aria-label="Interledger Foundation" data-umami-event="Site Nav - Logo">
      <FoundationLogo />
    </a>
    <div class="site-links-wrapper offscreen" data-nav-wrapper id="siteNavLinks">
      <ul class="site-nav__links menu--level-1" id="siteNavMenu">
        <li class="menu-item has-submenu menu-item--level-1">
          <a href={translatePath("/about-us")} aria-expanded="false" data-umami-event="Site Nav - Foundation">{t("nav.foundation")}</a>
          <ul class="menu--level-2">
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/about-us")} data-umami-event="Site Nav - About us">{t("nav.about")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/policy-and-advocacy")} data-umami-event="Site Nav - Policy & Advocacy">{t("nav.policy")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/team")} data-umami-event="Site Nav - Team">{t("nav.team")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/press")} data-umami-event="Site Nav - Press">{t("nav.media")}</a>
            </li>
          </ul>
        </li>
        <li class="menu-item has-submenu menu-item--level-1">
          <a href={translatePath("/developers")} aria-expanded="false" data-umami-event="Site Nav - Technology">{t("nav.technology")}</a>
          <ul class="menu--level-2">
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/open-standards")} data-umami-event="Site Nav - Open Standards">{t("nav.overview")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/interledger")} data-umami-event="Site Nav - Interledger">{t("nav.interledger")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/open-payments")} data-umami-event="Site Nav - Open Payments">{t("nav.open-payments")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/web-monetization")} data-umami-event="Site Nav - Web Monetization">{t("nav.web-monetization")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/join-network")} data-umami-event="Site Nav - Join network">{t("nav.join")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/developers")} data-umami-event="Site Nav - Developers Portal">{t("nav.developers")}</a>
            </li>
          </ul>
        </li>
        <li class="menu-item has-submenu menu-item--level-1">
          <a href={translatePath("/financial-services")} aria-expanded="false" data-umami-event="Site Nav - Grants">{t("nav.grants")}</a>
          <ul class="menu--level-2">
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/financial-services")} data-umami-event="Site Nav - Financial Services">{t("nav.financial-services")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/education")} data-umami-event="Site Nav - Education">{t("nav.education")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/ambassadors")} data-umami-event="Site Nav - Ambassadors">{t("nav.ambassadors")}</a>
            </li>
          </ul>
        </li>
        <li class="menu-item has-submenu menu-item--level-1">
          <a href={translatePath("/blog")} aria-expanded="false" data-umami-event="Site Nav - Content hub">{t("nav.content-hub")}</a>
          <ul class="menu--level-2">
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/blog")} data-umami-event="Site Nav - Blog">{t("nav.foundation-blog")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/developers/blog")} data-umami-event="Site Nav - Engineering Blog">{t("nav.tech-blog")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/podcast")} data-umami-event="Site Nav - Podcast">{t("nav.podcast")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href="https://community.interledger.org/" data-umami-event="Site Nav - Community Forem" rel="noopener noreferrer" target="_blank" class="external">{t("nav.community-forem")}</a>
            </li>
          </ul>
        </li>
        <li class="menu-item has-submenu menu-item--level-1">
          <a href={translatePath("/get-involved")} aria-expanded="false" data-umami-event="Site Nav - Participate">{t("nav.participate")}</a>
          <ul class="menu--level-2">
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/get-involved")} data-umami-event="Site Nav - Get involved">{t("nav.get-involved")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/events")} data-umami-event="Site Nav - Events">{t("nav.events")}</a>
            </li>
            <li class="menu-item menu-item--level-2">
              <a href={translatePath("/participation-guidelines")} data-umami-event="Site Nav - Guidelines">{t("nav.guidelines")}</a>
            </li>
          </ul>
        </li>
      </ul>
      <a class="switch-link" href={translatePath("/summit")} data-umami-event="Site Nav - Summit Link">{t("nav.summit")}</a>
    </div>
    <button type="button" class="site-nav__toggle" aria-controls="siteNavMenu" aria-label="Toggle Menu" title="Toggle Menu" id="siteNavToggle">
      <div id="menuIcon" class="menu-icon">
        <span></span>
        <span></span>
        <span></span>
        <span></span>
      </div>
    </button>
  </nav>
  <LanguagePicker lang={lang} />
</header>

<style>
.site-header {
  background-color: var(--color-header-bg);
  padding: 0 var(--space-m);
  position: sticky;
  top: 0;
  z-index: 2;
  border-block-start: 2px solid var(--color-header-accent);
  box-shadow: var(--box-shadow);
}

.site-nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.site-nav ul {
  list-style: none;
  padding-inline-start: 0;
  justify-content: center;
}

.site-nav a {
  display: block;
  color: currentColor;
  transition: text-decoration 200ms ease-in-out;
  white-space: nowrap;
}

.site-logo {
  width: 11em;
  flex: none;
}

.site-nav__links a {
  text-decoration: none;
  padding: var(--space-s) var(--space-2xs);
  color: var(--color-black);
}

.site-nav__links a:hover {
  background-color: var(--color-header-accent);
  color: currentColor;
}

a.external::after {
  content: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18"><path stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 3H3a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-4M11 1h6m0 0v6m0-6L7 11"/></svg>');
  display: inline-block;
  height: 0.75em;
  width: 0.75em;
  margin-inline-start: var(--space-2xs);
}

.switch-link {
  align-self: center;
  justify-self: end;
  grid-area: site;
  padding-block: var(--space-s);
  text-decoration: none;
}

a.switch-link:hover {
  text-decoration: underline;
  color: currentColor;
}

@media screen and (max-width: 479px) {
  .site-links-wrapper {
    width: 100%;
  }
}

@media screen and (min-width: 480px) and (max-width: 1159px) {
  .site-links-wrapper {
    width: max-content;
  }
}

@media screen and (max-width: 1159px) {
  .site-nav {
    height: var(--site-header-height);
  }

  .site-links-wrapper {
    position: absolute;
    background-color: var(--color-header-bg);
    top: var(--site-header-height);
    right: 0;
    transition: transform 300ms ease-in-out;
    border-block-start: 1px solid var(--color-header-accent);
  }

  .site-links-wrapper.offscreen {
    transform: translateX(100%);
  }

  .site-links-wrapper a {
    padding-inline: var(--space-s);
  }

  a[aria-expanded="false"] + .menu--level-2 {
    display: none;
  }

  a[aria-expanded="true"] + .menu--level-2 {
    display: block;
  }

  .menu-item--level-1 > .is-active {
    border-inline-start: 2px solid var(--color-header-accent);
  }

  .menu-item--level-2 > .is-active {
    text-decoration: underline;
  }

  .switch-link:hover {
    background-color: var(--color-header-accent);
  }

  .site-nav__toggle {
    border: 0;
    background: initial;
    padding: var(--space-xs) 0;
  }

  .menu-icon {
    position: relative;
    transform: rotate(0deg);
    transition: 0.5s ease-in-out;
    cursor: pointer;
    height: 1em;
    width: 1.5em;
  }

  .menu-icon span {
    display: block;
    position: absolute;
    height: 4px;
    width: 100%;
    background: currentColor;
    border-radius: 4px;
    opacity: 1;
    left: 0;
    transform: rotate(0deg);
    transition: 0.25s ease-in-out;
  }

  .menu-icon span:nth-child(1) {
    top: 0;
  }

  .menu-icon span:nth-child(2),
  .menu-icon span:nth-child(3) {
    top: 50%;
  }

  .menu-icon span:nth-child(4) {
    top: 100%;
  }

  .menu-icon.open span:nth-child(1),
  .menu-icon.open span:nth-child(4) {
    top: 50%;
    width: 0%;
    left: 50%;
  }

  .menu-icon.open span:nth-child(2) {
    transform: rotate(45deg);
  }

  .menu-icon.open span:nth-child(3) {
    transform: rotate(-45deg);
  }

  ul.menu--level-2 {
    padding-inline-start: var(--space-m);
  }
}

@media screen and (min-width: 1160px) {
  .site-header {
    display: flex;
    align-items: center;
  }
  .site-nav {
    display: grid;
    grid-template-columns: auto 1fr 1fr;
    grid-template-areas: "logo links links";
    gap: var(--space-s);
    flex: 1;
  }

  .site-logo {
    grid-area: logo;
    z-index: 1;
  }

  .site-links-wrapper {
    grid-area: 1 / 1 / 2 / 4;
    display: grid;
    grid-template-columns: minmax(10em, 1fr) 1fr 1fr;
    grid-template-areas: ". menu site";
    gap: var(--space-s);
  }

  .site-nav__links {
    grid-area: menu;
    display: flex;
    align-items: center;
  }

  .has-submenu {
    position: relative;
  }

  .site-nav .menu--level-2 {
    background-color: var(--color-header-bg);
    position: absolute;
    border-inline-start: 2px solid var(--color-header-accent);
    transition: opacity 150ms ease-in;
  }

  .site-nav .menu--level-2 a {
    padding: var(--space-2xs);
  }

  .has-submenu > a[aria-expanded="false"] + ul {
    visibility: hidden;
    opacity: 0;
  }

  .has-submenu > a[aria-expanded="true"] + ul,
  .menu-item--level-1:hover > .menu--level-2,
  .menu--level-2:hover {
    visibility: visible;
    opacity: 1;
    width: max-content;
    min-width: 100%;
    left: 0;
    top: calc(1.4em + var(--space-s) * 2);
    box-shadow: 2px 3px 6px -3px hsla(0, 0%, 0%, 0.06),
    -2px 3px 6px -3px hsla(0, 0%, 0%, 0.06);
  }

  .site-nav__toggle {
    display: none;
  }
}

</style>

<script>
const siteLinksWrapper = document.querySelector("[data-nav-wrapper]");
const wideNavMinWidth = window.matchMedia("(min-width: 1060px)");
wideNavMinWidth.addEventListener("change", handleNavDisplayStyles);

const siteNavToggle = document.getElementById("siteNavToggle");
const menuIcon = document.getElementById("menuIcon");

if (document.contains(siteNavToggle)) {
  siteNavToggle?.addEventListener("click", handleMobileNavToggle, false);
}

function handleMobileNavToggle() {
  siteLinksWrapper?.classList.toggle("offscreen");
  if (siteLinksWrapper?.getAttribute("class")?.includes("offscreen")) {
    menuIcon?.classList.remove("open");
  } else {
    menuIcon?.classList.add("open");
  }
}

function handleNavDisplayStyles(event: MediaQueryListEvent) {
  if (event.matches) {
    siteLinksWrapper?.classList.remove("offscreen");
  } else {
    if (siteLinksWrapper) {
      flashPrevention(siteLinksWrapper);
    }
    siteLinksWrapper?.classList.add("offscreen");
  }
}

function flashPrevention(element: Element) {
  element.setAttribute("style", "display:none");
  setTimeout(() => {
    element.removeAttribute("style");
  }, 10);
}

// Site sub-navigation toggle
const siteNav = document.querySelector(".site-nav__links") as HTMLInputElement;

if (document.contains(siteNav)) {
  const subLinks = document.querySelectorAll(".has-submenu > a");

  subLinks.forEach((subLink) => {
    subLink.setAttribute("aria-expanded", "false");

    subLink.addEventListener("click", function (event) {
      const clickedSubLink = event.target as Element;
      const allSubLinks = Array.from(subLinks);
      const notClickedLinks = allSubLinks.filter(function (otherLink) {
        return otherLink !== clickedSubLink;
      });
      notClickedLinks.forEach((link) => {
        link.setAttribute("aria-expanded", "false");
      });
      if (clickedSubLink?.getAttribute("aria-expanded") === "true") {
        clickedSubLink?.setAttribute("aria-expanded", "false");
      } else {
        clickedSubLink?.setAttribute("aria-expanded", "true");
      }
      event.preventDefault();
      return false;
    });
  });

  siteNav?.addEventListener("keydown", function (event) {
    if (event.key === "Escape") {
      resetSubMenus();
    }
  });

  document.addEventListener("click", function (event) {
    if (isClickOutside(event, subLinks)) {
      resetSubMenus();
    }
  });

  function resetSubMenus() {
    subLinks.forEach((subLink) => {
      subLink.setAttribute("aria-expanded", "false");
    });
  }
}

function isClickOutside(event: MouseEvent, nodeList: NodeListOf<Element>) {
  let clickedInsideTarget = false;
  const eventTarget = event.target as Element;
  Array.from(nodeList).forEach(function (element) {
    if (element.contains(eventTarget)) {
      clickedInsideTarget = true;
    }
  });
  return !clickedInsideTarget;
}
</script>
